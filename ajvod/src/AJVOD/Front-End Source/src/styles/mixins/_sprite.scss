/*
 * Sprite mixin
 *
 * The reason why we specify [dir="ltr"] and [dir="rtl"] styles, instead of only
 * defining one of them and leveraging cascading, is because carousels can
 * display RTL or LTR regardless of the parent direction setting. This means that
 * if the page is in RTL and the carousel is LTR, RTL styles will still take
 * prescedence because of CSS specifity.
 */
@mixin sprite(
  $default-pos: 0, // Default background position of the icon
  $hover-pos: 0, // Hover position
  $disabled-pos: 0, // Disabled position
  $default-pos-rtl: $default-pos, // Default position on RTL pages
  $hover-pos-rtl: $hover-pos, // Hover position on RTL pages
  $disabled-pos-rtl: $disabled-pos, // Disabled position on RTL pages
  $positions-only: false, // Only include the background-position property?
  $generated: false, // Is this using CSS generated content?
  $image-only: false // Only include the backgorund-image/repeat props?
) {

  @if $image-only == true {
    background-image: url(../images/sprite.png);
    background-repeat: no-repeat;
  } @else {
    @if $positions-only == false {
      background-image: url(../images/sprite.png);
      background-repeat: no-repeat;
    }

    // If this is a generated item...
    @if($generated == true) {
      &:after {
        .is-rtl & { background-position: $default-pos-rtl; }
        .is-ltr & { background-position: $default-pos; }
      }
      @if $hover-pos != 0 {
        &:hover:after {
          .is-rtl & { background-position: $hover-pos-rtl; }
          .is-ltr & { background-position: $hover-pos; }
        }
      }
      @if $disabled-pos != 0 {
        &.is-disabled:after {
          .is-rtl & { background-position: $disabled-pos-rtl; }
          .is-ltr & { background-position: $disabled-pos; }
        }
      }

      // Non-generated items
    } @else {
      .is-rtl & { background-position: $default-pos-rtl; }
      .is-ltr & { background-position: $default-pos; }

      @if $hover-pos != 0 {
        &:hover, &.is-active {
          .is-rtl & { background-position: $hover-pos-rtl; }
          .is-ltr & { background-position: $hover-pos; }
        }
      }
      @if $disabled-pos != 0 {
        &.is-disabled {
          .is-rtl & { background-position: $disabled-pos-rtl; }
          .is-ltr & { background-position: $disabled-pos; }
        }
      }
    }
  }
}

